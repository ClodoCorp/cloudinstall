#!/bin/bash -e

goversion=$(go version)
arch="$1"

if [ "x$(echo $goversion | grep devel | wc -l)" != "x1" -a "x$(echo $goversion | grep -E "1\.5|1\.6" | wc -l)" != "x1" ]; then
    export GOROOT=$(pwd)/goroot/
    wget https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz -O go.tar.gz
    mkdir -p ${GOROOT}; tar -C ${GOROOT} -xf go.tar.gz
    rm -f go.tar.gz
    export PATH=${GOROOT}/bin:$PATH
fi

export GOPATH=$(pwd)/gopath
export ORG_PATH=github.com/yoctocloud
export REPO_PATH=${ORG_PATH}/cloudinstall

rm -rf ${GOPATH}
mkdir -p ${GOPATH}/src/${ORG_PATH}

ln -s ../../../.. ${GOPATH}/src/${REPO_PATH}

export GOOS=linux
if [ "x${arch}" = "xx86_64" ]; then
   export GOARCH=amd64
elif [ "x${arch}" = "xx86_32" ]; then
   export GOARCH=386
fi

curdir=$(pwd)
tmp=$(mktemp --tmpdir -d)
rm -f "${curdir}/output/*-${arch}"
mkdir -p "${tmp}/etc" "${tmp}/bin" "$(pwd)/output"
touch "${tmp}/etc/resolv.conf"
cp ${curdir}/data/busybox-${arch} "${tmp}/bin/busybox"
cp ${curdir}/data/init "${tmp}/init"
go build -v -tags netgo -o "${tmp}/init2" ${REPO_PATH}
cp -f ${curdir}/data/vmlinuz-*-x86_32 "${curdir}/output/kernel-${arch}"
pushd "${tmp}/" >/dev/null
find . | cpio -H newc -o 2>/dev/null | gzip > "${curdir}/output/initrd-${arch}"
popd >/dev/null
